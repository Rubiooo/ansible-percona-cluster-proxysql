---

  - name: Add percona repo
    become: yes
    apt:
      deb: "https://repo.percona.com/apt/percona-release_0.1-4.xenial_all.deb"

  - name: Update apt
    become: yes
    apt:  update_cache=yes

  - name: Install Python package manager on Ubuntu 16.04
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - python3-dev
      - libmysqlclient-dev
      - python3-pip

  - name: Install the Python MySQLB module
    pip:
      name: "{{ item }}"
    with_items:
      - pip
      - mysqlclient

  - name: Sets root password
    debconf:
      name: "percona-xtradb-cluster-{{ percona_cluster_version|replace('.','') }}"
      question: "{{ item }}"
      value: "{{ percona_cluster_root_password }}"
      vtype: 'password'
    changed_when: false
    with_items:
      - 'root_password'
      - 'root_password_again'

  - name: Sets root password again
    debconf:
      name: "percona-xtradb-cluster-server-{{ percona_cluster_version }}"
      question: "percona-xtradb-cluster-server/{{ item }}"
      value: "{{ percona_cluster_root_password }}"
      vtype: 'password'
    changed_when: false
    with_items:
      - 'root_password'
      - 'root_password_again'

  - name: Easy access for Root user
    template:
      src: 'root_my.cnf.j2'
      dest: '/root/.my.cnf'

  - name: Installs percona-server
    apt:
      pkg: "percona-xtradb-cluster-{{ percona_cluster_version|replace('.','') }}"
      state: present

  - name: Configure MySQL
    template:
      src: "my.cnf.j2"
      dest: '/etc/mysql/my.cnf'

  - name: Check if cluster was previously set up
    stat:
      path: /etc/mysql/cluster_initialized
    register: cluster_initialized

  - name: Initialize cluster if not done before
    include: init-cluster.yml
    when: cluster_initialized.stat.exists == False

  - name: Restart mysql cluster servers
    service:
      name: mysql
      state: restarted

  - name: Add proxysql monitoring user
    mysql_user:
      priv: "*.*:usage"
      user: "{{ proxysql_monitor_username }}"
      password: "{{ proxysql_monitor_password }}"
      host: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
    with_items:
      - "{{ groups['dbproxy'] }}"
    run_once: yes

  - name: Add databases
    mysql_db:
      name: "{{ item }}"
      state: present
    with_items:
      - "{{ percona_cluster_application_databases }}"
    run_once: yes

  - name: Add database grants
    mysql_user:
      priv: "{{ item[0].priv }}"
      name: "{{ item[0].name }}"
      password: "{{ item[0].password }}"
      host: "{{ hostvars[item[1]]['ansible_default_ipv4']['address'] }}"
      state: present
    with_nested:
      - "{{ percona_cluster_application_users }}"
      - "{{ groups['dbproxy'] }}"
    run_once: yes
