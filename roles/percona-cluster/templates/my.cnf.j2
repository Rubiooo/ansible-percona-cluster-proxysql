#
# Ansible managed
#

[mysql]
prompt='mysql [{{ inventory_hostname }}] > '

[mysqld]
bind-address    = {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
datadir = /var/lib/mysql
log_warnings=2
server_id=1
log_bin=percona-bin
log_slave_updates
binlog_format = ROW
expire-logs-days = {{ percona_cluster_expire_log_days }}

enforce_gtid_consistency=1
gtid_mode=on
log_error=/var/log/mysql/error.log
max_allowed_packet = {{ percona_cluster_max_allowed_packet }}

{# list of cluster members #}
{% set cluster_members = [] -%}

{%- for node in groups['database'] %}
  {%- set _ = cluster_members.append(hostvars[node]['ansible_default_ipv4']['address']) -%}
{% endfor -%}
wsrep_cluster_address   = gcomm://{{ ",".join(cluster_members) }}
wsrep_cluster_name      = {{ percona_cluster_name }}
wsrep_node_name         = {{ inventory_hostname }}
wsrep_node_address      = {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
# wsrep_provider_options="base_host={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

wsrep_provider = /usr/lib/libgalera_smm.so
wsrep_sst_method = xtrabackup-v2
wsrep_sst_auth = {{ percona_cluster_sst_user }}:{{ percona_cluster_sst_password }}

# InnoDB config
innodb_locks_unsafe_for_binlog = 1
innodb_autoinc_lock_mode = 2
{% if pxc_innodb_buffer_pool_size is defined %}
innodb_buffer_pool_size = {{ pxc_innodb_buffer_pool_size }}
{% elif ansible_memtotal_mb > 32000 %}
innodb_buffer_pool_size = {{ (ansible_memtotal_mb - 32000)*1024*1024 }}
{% else %}
# Using default innodb_buffer_pool_size since memory is below 32G
innodb_buffer_pool_size = 64M
{% endif %}

innodb_large_prefix=on
#
# !includedir /etc/mysql/conf.d/

# wsrep_slave_threads={{ ansible_processor_cores }}
# wsrep_notify_cmd=/usr/local/bin/wsrep_notify.sh
# wsrep_sst_receive_address={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
